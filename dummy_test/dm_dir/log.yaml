  - log: _FORTIFY_SOURCE 2
  - log: _GNU_SOURCE 1
  - log: __BIGGEST_ALIGNMENT__ 16
  - log: __CHAR16_TYPE__ short unsigned int
  - log: __CHAR32_TYPE__ unsigned int
  - log: __CHAR_BIT__ 8
  - log: __DBL_DENORM_MIN__ 4.9406564584124654e-324
  - log: __DBL_DIG__ 15
  - log: __DBL_EPSILON__ 2.2204460492503131e-16
  - log: __DBL_HAS_DENORM__ 1
  - log: __DBL_HAS_INFINITY__ 1
  - log: __DBL_HAS_QUIET_NAN__ 1
  - log: __DBL_MANT_DIG__ 53
  - log: __DBL_MAX_10_EXP__ 308
  - log: __DBL_MAX_EXP__ 1024
  - log: __DBL_MAX__ 1.7976931348623157e+308
  - log: __DBL_MIN_10_EXP__ (-307)
  - log: __DBL_MIN_EXP__ (-1021)
  - log: __DBL_MIN__ 2.2250738585072014e-308
  - log: __DEC128_EPSILON__ 1E-33DL
  - log: __DEC128_MANT_DIG__ 34
  - log: __DEC128_MAX_EXP__ 6145
  - log: __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
  - log: __DEC128_MIN_EXP__ (-6142)
  - log: __DEC128_MIN__ 1E-6143DL
  - log: __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
  - log: __DEC32_EPSILON__ 1E-6DF
  - log: __DEC32_MANT_DIG__ 7
  - log: __DEC32_MAX_EXP__ 97
  - log: __DEC32_MAX__ 9.999999E96DF
  - log: __DEC32_MIN_EXP__ (-94)
  - log: __DEC32_MIN__ 1E-95DF
  - log: __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
  - log: __DEC64_EPSILON__ 1E-15DD
  - log: __DEC64_MANT_DIG__ 16
  - log: __DEC64_MAX_EXP__ 385
  - log: __DEC64_MAX__ 9.999999999999999E384DD
  - log: __DEC64_MIN_EXP__ (-382)
  - log: __DEC64_MIN__ 1E-383DD
  - log: __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
  - log: __DECIMAL_BID_FORMAT__ 1
  - log: __DECIMAL_DIG__ 21
  - log: __DEC_EVAL_METHOD__ 2
  - log: __DEPRECATED 1
  - log: __ELF__ 1
  - log: __EXCEPTIONS 1
  - log: __FINITE_MATH_ONLY__ 0
  - log: __FLT_DENORM_MIN__ 1.40129846e-45F
  - log: __FLT_DIG__ 6
  - log: __FLT_EPSILON__ 1.19209290e-7F
  - log: __FLT_EVAL_METHOD__ 2
  - log: __FLT_HAS_DENORM__ 1
  - log: __FLT_HAS_INFINITY__ 1
  - log: __FLT_HAS_QUIET_NAN__ 1
  - log: __FLT_MANT_DIG__ 24
  - log: __FLT_MAX_10_EXP__ 38
  - log: __FLT_MAX_EXP__ 128
  - log: __FLT_MAX__ 3.40282347e+38F
  - log: __FLT_MIN_10_EXP__ (-37)
  - log: __FLT_MIN_EXP__ (-125)
  - log: __FLT_MIN__ 1.17549435e-38F
  - log: __FLT_RADIX__ 2
  - log: __GCC_HAVE_DWARF2_CFI_ASM 1
  - log: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
  - log: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
  - log: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
  - log: __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
  - log: __GNUC_GNU_INLINE__ 1
  - log: __GNUC_MINOR__ 4
  - log: __GNUC_PATCHLEVEL__ 5
  - log: __GNUC__ 4
  - log: __GNUG__ 4
  - log: __GXX_ABI_VERSION 1002
  - log: __GXX_RTTI 1
  - log: __GXX_WEAK__ 1
  - log: __INTMAX_MAX__ 9223372036854775807LL
  - log: __INTMAX_TYPE__ long long int
  - log: __INT_MAX__ 2147483647
  - log: __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L
  - log: __LDBL_DIG__ 18
  - log: __LDBL_EPSILON__ 1.08420217248550443401e-19L
  - log: __LDBL_HAS_DENORM__ 1
  - log: __LDBL_HAS_INFINITY__ 1
  - log: __LDBL_HAS_QUIET_NAN__ 1
  - log: __LDBL_MANT_DIG__ 64
  - log: __LDBL_MAX_10_EXP__ 4932
  - log: __LDBL_MAX_EXP__ 16384
  - log: __LDBL_MAX__ 1.18973149535723176502e+4932L
  - log: __LDBL_MIN_10_EXP__ (-4931)
  - log: __LDBL_MIN_EXP__ (-16381)
  - log: __LDBL_MIN__ 3.36210314311209350626e-4932L
  - log: __LONG_LONG_MAX__ 9223372036854775807LL
  - log: __LONG_MAX__ 2147483647L
  - log: __NO_INLINE__ 1
  - log: __PTRDIFF_TYPE__ int
  - log: __REGISTER_PREFIX__ 
  - log: __SCHAR_MAX__ 127
  - log: __SHRT_MAX__ 32767
  - log: __SIZEOF_DOUBLE__ 8
  - log: __SIZEOF_FLOAT__ 4
  - log: __SIZEOF_INT__ 4
  - log: __SIZEOF_LONG_DOUBLE__ 12
  - log: __SIZEOF_LONG_LONG__ 8
  - log: __SIZEOF_LONG__ 4
  - log: __SIZEOF_POINTER__ 4
  - log: __SIZEOF_PTRDIFF_T__ 4
  - log: __SIZEOF_SHORT__ 2
  - log: __SIZEOF_SIZE_T__ 4
  - log: __SIZEOF_WCHAR_T__ 4
  - log: __SIZEOF_WINT_T__ 4
  - log: __SIZE_TYPE__ unsigned int
  - log: __SSP__ 1
  - log: __STDC_HOSTED__ 1
  - log: __STDC__ 1
  - log: __UINTMAX_TYPE__ long long unsigned int
  - log: __USER_LABEL_PREFIX__ 
  - log: __VERSION__ "4.4.5"
  - log: __WCHAR_MAX__ 2147483647
  - log: __WCHAR_TYPE__ int
  - log: __WINT_TYPE__ unsigned int
  - log: __cplusplus 1
  - log: __gnu_linux__ 1
  - log: __i386 1
  - log: __i386__ 1
  - log: __i686 1
  - log: __i686__ 1
  - log: __linux 1
  - log: __linux__ 1
  - log: __pentiumpro 1
  - log: __pentiumpro__ 1
  - log: __unix 1
  - log: __unix__ 1
  - log: i386 1
  - log: linux 1
  - log: unix 1
./example.cpp:
  - log: parsing replacement list: '100' of macro: A
  - log: id = A	rep list = 100
  - log: #define A
  - log: parsing replacement list: 'i' of macro: _c
  - log: id = _c(i)	rep list = i
  - log: #define _c(i)
  - log: parsing replacement list: 'i*i' of macro: _a
  - log: id = _a(i)	rep list = i*i
  - log: #define _a(i)
  - log: parsing replacement list: '' of macro: CRYPTOPP_X86_ASM_AVAILABLE
  - log: id = CRYPTOPP_X86_ASM_AVAILABLE	rep list = 
  - log: #define CRYPTOPP_X86_ASM_AVAILABLE
  - log: parsing replacement list: '((X) + (Y))' of macro: FXY
  - log: id = FXY(X,Y,Z)	rep list = ((X) + (Y))
  - log: #define FXY(X,Y,Z)
  - log: parsing replacement list: 'FXY(1,200,3)' of macro: fun
  - log: id = fun()	rep list = FXY(1,200,3)
  - log: #define fun()
  - log: parsing replacement list: 'X+100 + j' of macro: INSIDE_FUN_SUPER
  - log: id = INSIDE_FUN_SUPER(X,Y)	rep list = X+100 + j
  - log: #define INSIDE_FUN_SUPER(X,Y)
  - log: parsing replacement list: '{  X = FXY(X,Y,0);  }' of macro: proc
  - log: id = proc(X,Y)	rep list = {  X = FXY(X,Y,0);  }
  - log: #define proc(X,Y)
  - log: parsing replacement list: '(((x) >> 24) & 0xffU)  /* most  significant byte */' of macro: MSB
  - log: id = MSB(x)	rep list = (((x) >> 24) & 0xffU)  /* most  significant byte */
  - log: #define MSB(x)
  - log: parsing replacement list: 'X+100' of macro: INSIDE_FUN
  - log: id = INSIDE_FUN(X)	rep list = X+100
  - log: #define INSIDE_FUN(X)
  - log: Inserting macros to the property map:
  - log: checking the dependency order of macro A
./header1.h:
  - log: parsing replacement list: '1' of macro: header11_macro
  - log: id = header11_macro	rep list = 1
  - log: #define header11_macro
  - log: Inserting macros to the property map:
  - log: checking the dependency order of macro header11_macro
./header2.h:
  - log: parsing replacement list: 'x = x+y' of macro: header1_macro
  - log: id = header1_macro(x,y)	rep list = x = x+y
  - log: #define header1_macro(x,y)
  - log: parsing replacement list: 'x[y]' of macro: header3_macro
  - log: id = header3_macro(x,y)	rep list = x[y]
  - log: #define header3_macro(x,y)
  - log: Inserting macros to the property map:
  - log: checking the dependency order of macro header1_macro(x,y)
